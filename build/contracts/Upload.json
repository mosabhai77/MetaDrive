{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "allow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "disallow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "display",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shareAccess",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "access",
              "type": "bool"
            }
          ],
          "internalType": "struct Upload.Access[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Upload.sol"
  },
  "ast": {
    "absolutePath": "contracts/Upload.sol",
    "exportedSymbols": {
      "Upload": [
        219
      ]
    },
    "id": 220,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Upload",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219
        ],
        "name": "Upload",
        "nameLocation": "79:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Upload.Access",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "121:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "113:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "113:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "access",
                "nameLocation": "138:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "133:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "133:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Access",
            "nameLocation": "100:6:0",
            "nodeType": "StructDefinition",
            "scope": 219,
            "src": "93:72:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "195:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "168:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(address => string[])"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "176:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "168:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(address => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "185:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 9,
                "nodeType": "ArrayTypeName",
                "src": "185:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "ownership",
            "nameLocation": "245:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "204:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "212:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "204:40:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 15,
                "keyType": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "221:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 14,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "accessList",
            "nameLocation": "285:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "258:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Upload.Access[])"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "258:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Upload.Access[])"
              },
              "valueType": {
                "baseType": {
                  "id": 20,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 19,
                    "name": "Access",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 6,
                    "src": "275:6:0"
                  },
                  "referencedDeclaration": 6,
                  "src": "275:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Access_$6_storage_ptr",
                    "typeString": "struct Upload.Access"
                  }
                },
                "id": 21,
                "nodeType": "ArrayTypeName",
                "src": "275:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage_ptr",
                  "typeString": "struct Upload.Access[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "previousData",
            "nameLocation": "340:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "299:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "307:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "299:40:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 27,
                "keyType": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "324:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "316:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 26,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "412:35:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40,
                        "name": "url",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "438:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 36,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "420:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(address => string storage ref[] storage ref)"
                          }
                        },
                        "id": 38,
                        "indexExpression": {
                          "id": 37,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "426:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "420:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "420:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "420:22:0"
                }
              ]
            },
            "functionSelector": "36d6da55",
            "id": 44,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "366:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "378:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "370:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "url",
                  "nameLocation": "398:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "384:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:33:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:0"
            },
            "scope": 219,
            "src": "357:90:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "488:427:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 49,
                          "name": "ownership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "501:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 53,
                        "indexExpression": {
                          "expression": {
                            "id": 50,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "511:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "511:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "501:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 52,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "523:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "501:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "529:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "501:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "501:32:0"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 58,
                        "name": "previousData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "545:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "expression": {
                          "id": 59,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "558:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "558:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "545:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 63,
                    "indexExpression": {
                      "id": 62,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "570:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "545:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "788:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 108,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "835:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "74727565",
                                  "id": 109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "840:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 107,
                                "name": "Access",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "828:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Access_$6_storage_ptr_$",
                                  "typeString": "type(struct Upload.Access storage pointer)"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "828:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Access_$6_memory_ptr",
                                "typeString": "struct Upload.Access memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Access_$6_memory_ptr",
                                "typeString": "struct Upload.Access memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 102,
                                "name": "accessList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "800:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                }
                              },
                              "id": 105,
                              "indexExpression": {
                                "expression": {
                                  "id": 103,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "811:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "811:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "800:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                "typeString": "struct Upload.Access storage ref[] storage ref"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "800:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_ptr_$_t_struct$_Access_$6_storage_$returns$__$bound_to$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Upload.Access storage ref[] storage pointer,struct Upload.Access storage ref)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "800:46:0"
                      },
                      {
                        "expression": {
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 113,
                                "name": "previousData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "860:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 117,
                              "indexExpression": {
                                "expression": {
                                  "id": 114,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "873:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "873:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "860:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 118,
                            "indexExpression": {
                              "id": 116,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "885:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "860:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "891:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "860:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "860:35:0"
                      }
                    ]
                  },
                  "id": 123,
                  "nodeType": "IfStatement",
                  "src": "542:364:0",
                  "trueBody": {
                    "id": 101,
                    "nodeType": "Block",
                    "src": "576:208:0",
                    "statements": [
                      {
                        "body": {
                          "id": 99,
                          "nodeType": "Block",
                          "src": "636:140:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 86,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 78,
                                        "name": "accessList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "654:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 81,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 79,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "665:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "665:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "654:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                        "typeString": "struct Upload.Access storage ref[] storage ref"
                                      }
                                    },
                                    "id": 83,
                                    "indexExpression": {
                                      "id": 82,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "677:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "654:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Access_$6_storage",
                                      "typeString": "struct Upload.Access storage ref"
                                    }
                                  },
                                  "id": 84,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "user",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3,
                                  "src": "654:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 85,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "686:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "654:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 98,
                              "nodeType": "IfStatement",
                              "src": "651:114:0",
                              "trueBody": {
                                "id": 97,
                                "nodeType": "Block",
                                "src": "691:74:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 95,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 87,
                                              "name": "accessList",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 23,
                                              "src": "711:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                                "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 91,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 88,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "722:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 89,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "722:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "711:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                              "typeString": "struct Upload.Access storage ref[] storage ref"
                                            }
                                          },
                                          "id": 92,
                                          "indexExpression": {
                                            "id": 90,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65,
                                            "src": "734:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "711:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Access_$6_storage",
                                            "typeString": "struct Upload.Access storage ref"
                                          }
                                        },
                                        "id": 93,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "access",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5,
                                        "src": "711:32:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 94,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "744:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "711:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 96,
                                    "nodeType": "ExpressionStatement",
                                    "src": "711:37:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 68,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "600:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 69,
                                "name": "accessList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "602:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                }
                              },
                              "id": 72,
                              "indexExpression": {
                                "expression": {
                                  "id": 70,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "613:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "613:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "602:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                "typeString": "struct Upload.Access storage ref[] storage ref"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "602:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "600:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100,
                        "initializationExpression": {
                          "assignments": [
                            65
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 65,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "596:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 100,
                              "src": "591:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 64,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "591:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "598:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "591:8:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "632:3:0",
                            "subExpression": {
                              "id": 75,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "632:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 77,
                          "nodeType": "ExpressionStatement",
                          "src": "632:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "587:189:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ff9913e8",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allow",
            "nameLocation": "459:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "473:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "465:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:14:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:0:0"
            },
            "scope": 219,
            "src": "450:465:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "956:232:0",
              "statements": [
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 130,
                          "name": "ownership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "964:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 134,
                        "indexExpression": {
                          "expression": {
                            "id": 131,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "974:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "974:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "964:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "id": 133,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "986:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "964:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "992:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "964:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "964:33:0"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "1054:130:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 153,
                                  "name": "accessList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "1069:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                  }
                                },
                                "id": 156,
                                "indexExpression": {
                                  "expression": {
                                    "id": 154,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1080:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1080:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1069:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                  "typeString": "struct Upload.Access storage ref[] storage ref"
                                }
                              },
                              "id": 158,
                              "indexExpression": {
                                "id": 157,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "1092:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1069:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Access_$6_storage",
                                "typeString": "struct Upload.Access storage ref"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "1069:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 160,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1101:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1069:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 173,
                        "nodeType": "IfStatement",
                        "src": "1066:110:0",
                        "trueBody": {
                          "id": 172,
                          "nodeType": "Block",
                          "src": "1106:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 162,
                                        "name": "accessList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "1123:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 166,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 163,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "1134:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1134:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1123:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                                        "typeString": "struct Upload.Access storage ref[] storage ref"
                                      }
                                    },
                                    "id": 167,
                                    "indexExpression": {
                                      "id": 165,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 140,
                                      "src": "1146:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1123:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Access_$6_storage",
                                      "typeString": "struct Upload.Access storage ref"
                                    }
                                  },
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "access",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5,
                                  "src": "1123:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1156:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1123:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 171,
                              "nodeType": "ExpressionStatement",
                              "src": "1123:38:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 143,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "1018:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 144,
                          "name": "accessList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1020:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                          }
                        },
                        "id": 147,
                        "indexExpression": {
                          "expression": {
                            "id": 145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1031:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1031:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                          "typeString": "struct Upload.Access storage ref[] storage ref"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1020:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1018:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      140
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1014:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "1009:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1009:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 142,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1009:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1050:3:0",
                      "subExpression": {
                        "id": 150,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1050:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 152,
                    "nodeType": "ExpressionStatement",
                    "src": "1050:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1005:179:0"
                }
              ]
            },
            "functionSelector": "a9ed9cb8",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disallow",
            "nameLocation": "927:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "944:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "936:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:14:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:0"
            },
            "scope": 219,
            "src": "918:270:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "1262:122:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 186,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1278:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 187,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1285:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1285:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1278:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 190,
                              "name": "ownership",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1299:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 192,
                            "indexExpression": {
                              "id": 191,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1309:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1299:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 195,
                          "indexExpression": {
                            "expression": {
                              "id": 193,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1316:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1316:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1299:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1278:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520616363657373",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1328:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23b648a70fb9ffdbde98910288174d2416a8a3d77e4d3e725740ca94318323d5",
                          "typeString": "literal_string \"You don't have access\""
                        },
                        "value": "You don't have access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23b648a70fb9ffdbde98910288174d2416a8a3d77e4d3e725740ca94318323d5",
                          "typeString": "literal_string \"You don't have access\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1270:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:82:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:82:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 200,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1367:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(address => string storage ref[] storage ref)"
                      }
                    },
                    "id": 202,
                    "indexExpression": {
                      "id": 201,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "1373:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1367:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 184,
                  "id": 203,
                  "nodeType": "Return",
                  "src": "1360:19:0"
                }
              ]
            },
            "functionSelector": "eb39113f",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "display",
            "nameLocation": "1201:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1217:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1209:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:15:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1246:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 181,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1246:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 182,
                    "nodeType": "ArrayTypeName",
                    "src": "1246:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:17:0"
            },
            "scope": 219,
            "src": "1192:192:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "1447:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 212,
                      "name": "accessList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1462:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Access_$6_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Upload.Access storage ref[] storage ref)"
                      }
                    },
                    "id": 215,
                    "indexExpression": {
                      "expression": {
                        "id": 213,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1473:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1462:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage",
                      "typeString": "struct Upload.Access storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 211,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "1455:29:0"
                }
              ]
            },
            "functionSelector": "bc8bef81",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shareAccess",
            "nameLocation": "1397:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:2:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1431:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Access_$6_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Upload.Access[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 208,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 207,
                        "name": "Access",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6,
                        "src": "1431:6:0"
                      },
                      "referencedDeclaration": 6,
                      "src": "1431:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Access_$6_storage_ptr",
                        "typeString": "struct Upload.Access"
                      }
                    },
                    "id": 209,
                    "nodeType": "ArrayTypeName",
                    "src": "1431:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Access_$6_storage_$dyn_storage_ptr",
                      "typeString": "struct Upload.Access[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:17:0"
            },
            "scope": 219,
            "src": "1388:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 220,
        "src": "70:1421:0",
        "usedErrors": []
      }
    ],
    "src": "37:1454:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506108cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806336d6da551461005c578063a9ed9cb814610071578063bc8bef8114610084578063eb39113f146100a2578063ff9913e8146100c2575b600080fd5b61006f61006a366004610646565b6100d5565b005b61006f61007f366004610708565b610114565b61008c6101fc565b604051610099919061072a565b60405180910390f35b6100b56100b0366004610708565b61027f565b6040516100999190610784565b61006f6100d0366004610708565b6103eb565b6001600160a01b0382166000908152602081815260408220805460018101825590835291819020835161010f93919091019184019061057b565b505050565b3360009081526001602090815260408083206001600160a01b03851684529091528120805460ff191690555b336000908152600260205260409020548110156101f85733600090815260026020526040902080546001600160a01b0384169190839081106101845761018461081f565b6000918252602090912001546001600160a01b031614156101e6573360009081526002602052604081208054839081106101c0576101c061081f565b60009182526020909120018054911515600160a01b0260ff60a01b199092169190911790555b806101f081610835565b915050610140565b5050565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561027657600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b900460ff1615158183015282526001909201910161022b565b50505050905090565b60606001600160a01b0382163314806102bb57506001600160a01b038216600090815260016020908152604080832033845290915290205460ff165b6103035760405162461bcd60e51b8152602060048201526015602482015274596f7520646f6e277420686176652061636365737360581b604482015260640160405180910390fd5b6001600160a01b03821660009081526020818152604080832080548251818502810185019093528083529193909284015b828210156103e05783829060005260206000200180546103539061085e565b80601f016020809104026020016040519081016040528092919081815260200182805461037f9061085e565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b505050505081526020019060010190610334565b505050509050919050565b3360008181526001602081815260408084206001600160a01b038716808652908352818520805460ff19169094179093559383526003815283832091835252205460ff16156104f35760005b336000908152600260205260409020548110156101f85733600090815260026020526040902080546001600160a01b03841691908390811061047b5761047b61081f565b6000918252602090912001546001600160a01b031614156104e157336000908152600260205260409020805460019190839081106104bb576104bb61081f565b60009182526020909120018054911515600160a01b0260ff60a01b199092169190911790555b806104eb81610835565b915050610437565b336000818152600260209081526040808320815180830183526001600160a01b03878116808352600183870181815285548083018755958952878920945194909501805495511515600160a01b026001600160a81b03199096169490931693909317939093179055948452600383528184209084529091529020805460ff1916909117905550565b8280546105879061085e565b90600052602060002090601f0160209004810192826105a957600085556105ef565b82601f106105c257805160ff19168380011785556105ef565b828001600101855582156105ef579182015b828111156105ef5782518255916020019190600101906105d4565b506105fb9291506105ff565b5090565b5b808211156105fb5760008155600101610600565b80356001600160a01b038116811461062b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561065957600080fd5b61066283610614565b9150602083013567ffffffffffffffff8082111561067f57600080fd5b818501915085601f83011261069357600080fd5b8135818111156106a5576106a5610630565b604051601f8201601f19908116603f011681019083821181831017156106cd576106cd610630565b816040528281528860208487010111156106e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561071a57600080fd5b61072382610614565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561077757815180516001600160a01b031685528601511515868501529284019290850190600101610747565b5091979650505050505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561081157888603603f1901855282518051808852835b818110156107e1578281018a01518982018b015289016107c6565b818111156107f157848a838b0101525b50601f01601f1916969096018701955093860193918601916001016107ac565b509398975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561085757634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061087257607f821691505b6020821081141561089357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cbe2099853ff3cb38a0b8e2acb8e0cbc346baa10442a2a3702aa1ef90e4a2f8264736f6c634300080c0033",
  "bytecodeSha1": "79e08d39c7326b726c3440336f10b351383619fc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Upload",
  "coverageMap": {
    "branches": {
      "0": {
        "Upload.allow": {
          "15": [
            545,
            575,
            false
          ],
          "16": [
            654,
            690,
            false
          ]
        },
        "Upload.disallow": {
          "12": [
            1069,
            1105,
            false
          ]
        },
        "Upload.display": {
          "13": [
            1278,
            1295,
            true
          ],
          "14": [
            1299,
            1327,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Upload.add": {
          "0": [
            420,
            442
          ]
        },
        "Upload.allow": {
          "7": [
            501,
            533
          ],
          "8": [
            711,
            748
          ],
          "9": [
            632,
            635
          ],
          "10": [
            800,
            846
          ],
          "11": [
            860,
            895
          ]
        },
        "Upload.disallow": {
          "1": [
            964,
            997
          ],
          "2": [
            1123,
            1161
          ],
          "3": [
            1050,
            1053
          ]
        },
        "Upload.display": {
          "5": [
            1270,
            1352
          ],
          "6": [
            1360,
            1379
          ]
        },
        "Upload.shareAccess": {
          "4": [
            1455,
            1484
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806336d6da551461005c578063a9ed9cb814610071578063bc8bef8114610084578063eb39113f146100a2578063ff9913e8146100c2575b600080fd5b61006f61006a366004610646565b6100d5565b005b61006f61007f366004610708565b610114565b61008c6101fc565b604051610099919061072a565b60405180910390f35b6100b56100b0366004610708565b61027f565b6040516100999190610784565b61006f6100d0366004610708565b6103eb565b6001600160a01b0382166000908152602081815260408220805460018101825590835291819020835161010f93919091019184019061057b565b505050565b3360009081526001602090815260408083206001600160a01b03851684529091528120805460ff191690555b336000908152600260205260409020548110156101f85733600090815260026020526040902080546001600160a01b0384169190839081106101845761018461081f565b6000918252602090912001546001600160a01b031614156101e6573360009081526002602052604081208054839081106101c0576101c061081f565b60009182526020909120018054911515600160a01b0260ff60a01b199092169190911790555b806101f081610835565b915050610140565b5050565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561027657600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b900460ff1615158183015282526001909201910161022b565b50505050905090565b60606001600160a01b0382163314806102bb57506001600160a01b038216600090815260016020908152604080832033845290915290205460ff165b6103035760405162461bcd60e51b8152602060048201526015602482015274596f7520646f6e277420686176652061636365737360581b604482015260640160405180910390fd5b6001600160a01b03821660009081526020818152604080832080548251818502810185019093528083529193909284015b828210156103e05783829060005260206000200180546103539061085e565b80601f016020809104026020016040519081016040528092919081815260200182805461037f9061085e565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b505050505081526020019060010190610334565b505050509050919050565b3360008181526001602081815260408084206001600160a01b038716808652908352818520805460ff19169094179093559383526003815283832091835252205460ff16156104f35760005b336000908152600260205260409020548110156101f85733600090815260026020526040902080546001600160a01b03841691908390811061047b5761047b61081f565b6000918252602090912001546001600160a01b031614156104e157336000908152600260205260409020805460019190839081106104bb576104bb61081f565b60009182526020909120018054911515600160a01b0260ff60a01b199092169190911790555b806104eb81610835565b915050610437565b336000818152600260209081526040808320815180830183526001600160a01b03878116808352600183870181815285548083018755958952878920945194909501805495511515600160a01b026001600160a81b03199096169490931693909317939093179055948452600383528184209084529091529020805460ff1916909117905550565b8280546105879061085e565b90600052602060002090601f0160209004810192826105a957600085556105ef565b82601f106105c257805160ff19168380011785556105ef565b828001600101855582156105ef579182015b828111156105ef5782518255916020019190600101906105d4565b506105fb9291506105ff565b5090565b5b808211156105fb5760008155600101610600565b80356001600160a01b038116811461062b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561065957600080fd5b61066283610614565b9150602083013567ffffffffffffffff8082111561067f57600080fd5b818501915085601f83011261069357600080fd5b8135818111156106a5576106a5610630565b604051601f8201601f19908116603f011681019083821181831017156106cd576106cd610630565b816040528281528860208487010111156106e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561071a57600080fd5b61072382610614565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561077757815180516001600160a01b031685528601511515868501529284019290850190600101610747565b5091979650505050505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561081157888603603f1901855282518051808852835b818110156107e1578281018a01518982018b015289016107c6565b818111156107f157848a838b0101525b50601f01601f1916969096018701955093860193918601916001016107ac565b509398975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561085757634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061087257607f821691505b6020821081141561089357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cbe2099853ff3cb38a0b8e2acb8e0cbc346baa10442a2a3702aa1ef90e4a2f8264736f6c634300080c0033",
  "deployedSourceMap": "70:1421:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:90;;;;;;:::i;:::-;;:::i;:::-;;918:270;;;;;;:::i;:::-;;:::i;1388:101::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1192:192;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;450:465::-;;;;;;:::i;:::-;;:::i;357:90::-;-1:-1:-1;;;;;420:12:0;;:5;:12;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;357:90;;:::o;918:270::-;974:10;992:5;964:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;964:27:0;;;;;;;;;:33;;-1:-1:-1;;964:33:0;;;1005:179;1031:10;1020:22;;;;:10;:22;;;;;:29;1018:31;;1005:179;;;1080:10;1069:22;;;;:10;:22;;;;;:25;;-1:-1:-1;;;;;1069:36:0;;;:22;1092:1;;1069:25;;;;;;:::i;:::-;;;;;;;;;;:30;-1:-1:-1;;;;;1069:30:0;:36;1066:110;;;1134:10;1156:5;1123:22;;;:10;:22;;;;;:25;;1146:1;;1123:25;;;;;;:::i;:::-;;;;;;;;;;:38;;;;;-1:-1:-1;;;1123:38:0;-1:-1:-1;;;;1123:38:0;;;;;;;;;1066:110;1050:3;;;;:::i;:::-;;;;1005:179;;;;918:270;:::o;1388:101::-;1473:10;1462:22;;;;:10;:22;;;;;;;;1455:29;;;;;;;;;;;;;;;;;1431:15;;1455:29;;1462:22;;1455:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1455:29:0;;;;-1:-1:-1;;;1455:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1388:101;:::o;1192:192::-;1246:15;-1:-1:-1;;;;;1278:17:0;;1285:10;1278:17;;:49;;-1:-1:-1;;;;;;1299:16:0;;;;;;:9;:16;;;;;;;;1316:10;1299:28;;;;;;;;;;1278:49;1270:82;;;;-1:-1:-1;;;1270:82:0;;4187:2:1;1270:82:0;;;4169:21:1;4226:2;4206:18;;;4199:30;-1:-1:-1;;;4245:18:1;;;4238:51;4306:18;;1270:82:0;;;;;;;;-1:-1:-1;;;;;1367:12:0;;:5;:12;;;;;;;;;;;1360:19;;;;;;;;;;;;;;;;;;;1367:12;;1360:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:192;;;:::o;450:465::-;511:10;501:21;;;;529:4;501:21;;;;;;;;-1:-1:-1;;;;;501:27:0;;;;;;;;;;;:32;;-1:-1:-1;;501:32:0;;;;;;;545:24;;;:12;:24;;;;;:30;;;;;;501:32;545:30;542:364;;;591:6;587:189;613:10;602:22;;;;:10;:22;;;;;:29;600:31;;587:189;;;665:10;654:22;;;;:10;:22;;;;;:25;;-1:-1:-1;;;;;654:36:0;;;:22;677:1;;654:25;;;;;;:::i;:::-;;;;;;;;;;:30;-1:-1:-1;;;;;654:30:0;:36;651:114;;;722:10;711:22;;;;:10;:22;;;;;:25;;744:4;;711:22;734:1;;711:25;;;;;;:::i;:::-;;;;;;;;;;:37;;;;;-1:-1:-1;;;711:37:0;-1:-1:-1;;;;711:37:0;;;;;;;;;651:114;632:3;;;;:::i;:::-;;;;587:189;;542:364;811:10;800:22;;;;:10;:22;;;;;;;;828:17;;;;;;;-1:-1:-1;;;;;828:17:0;;;;;;840:4;828:17;;;;;;800:46;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;800:46:0;-1:-1:-1;;;;;;800:46:0;;;;;;;;;;;;;;;;;860:24;;;:12;:24;;;;;:30;;;;;;;;:35;;-1:-1:-1;;860:35:0;;;;;;450:465;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:996;402:6;410;463:2;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;502:29;521:9;502:29;:::i;:::-;492:39;;582:2;571:9;567:18;554:32;605:18;646:2;638:6;635:14;632:34;;;662:1;659;652:12;632:34;700:6;689:9;685:22;675:32;;745:7;738:4;734:2;730:13;726:27;716:55;;767:1;764;757:12;716:55;803:2;790:16;825:2;821;818:10;815:36;;;831:18;;:::i;:::-;906:2;900:9;874:2;960:13;;-1:-1:-1;;956:22:1;;;980:2;952:31;948:40;936:53;;;1004:18;;;1024:22;;;1001:46;998:72;;;1050:18;;:::i;:::-;1090:10;1086:2;1079:22;1125:2;1117:6;1110:18;1165:7;1160:2;1155;1151;1147:11;1143:20;1140:33;1137:53;;;1186:1;1183;1176:12;1137:53;1242:2;1237;1233;1229:11;1224:2;1216:6;1212:15;1199:46;1287:1;1282:2;1277;1269:6;1265:15;1261:24;1254:35;1308:6;1298:16;;;;;;;324:996;;;;;:::o;1325:186::-;1384:6;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1476:29;1495:9;1476:29;:::i;:::-;1466:39;1325:186;-1:-1:-1;;;1325:186:1:o;1516:822::-;1729:2;1781:21;;;1851:13;;1754:18;;;1873:22;;;1700:4;;1729:2;1914;;1932:18;;;;1973:15;;;1700:4;2016:296;2030:6;2027:1;2024:13;2016:296;;;2089:13;;2131:9;;-1:-1:-1;;;;;2127:35:1;2115:48;;2217:11;;2211:18;2204:26;2197:34;2183:12;;;2176:56;2252:12;;;;2287:15;;;;2159:1;2045:9;2016:296;;;-1:-1:-1;2329:3:1;;1516:822;-1:-1:-1;;;;;;;1516:822:1:o;2343:1268::-;2505:4;2534:2;2574;2563:9;2559:18;2604:2;2593:9;2586:21;2627:6;2662;2656:13;2693:6;2685;2678:22;2731:2;2720:9;2716:18;2709:25;;2793:2;2783:6;2780:1;2776:14;2765:9;2761:30;2757:39;2743:53;;2831:2;2823:6;2819:15;2852:1;2873;2883:699;2899:6;2894:3;2891:15;2883:699;;;2968:22;;;-1:-1:-1;;2964:36:1;2952:49;;3024:13;;3066:9;;3088:24;;;3136:1;3150:157;3166:8;3161:3;3158:17;3150:157;;;3274:12;;;3270:21;;3264:28;3241:16;;;3237:25;;3230:63;3185:12;;3150:157;;;3331:8;3326:3;3323:17;3320:106;;;3410:1;3405:2;3394:8;3386:6;3382:21;3378:30;3371:41;3320:106;-1:-1:-1;3492:2:1;3469:17;-1:-1:-1;;3465:31:1;3453:44;;;;3449:53;;;-1:-1:-1;3560:12:1;;;;3525:15;;;;2925:1;2916:11;2883:699;;;-1:-1:-1;3599:6:1;;2343:1268;-1:-1:-1;;;;;;;;2343:1268:1:o;3616:127::-;3677:10;3672:3;3668:20;3665:1;3658:31;3708:4;3705:1;3698:15;3732:4;3729:1;3722:15;3748:232;3787:3;-1:-1:-1;;3808:17:1;;3805:140;;;3867:10;3862:3;3858:20;3855:1;3848:31;3902:4;3899:1;3892:15;3930:4;3927:1;3920:15;3805:140;-1:-1:-1;3972:1:1;3961:13;;3748:232::o;4335:380::-;4414:1;4410:12;;;;4457;;;4478:61;;4532:4;4524:6;4520:17;4510:27;;4478:61;4585:2;4577:6;4574:14;4554:18;4551:38;4548:161;;;4631:10;4626:3;4622:20;4619:1;4612:31;4666:4;4663:1;4656:15;4694:4;4691:1;4684:15;4548:161;;4335:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    70,
    1491
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36D6DA55 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xA9ED9CB8 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC8BEF81 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xEB39113F EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xFF9913E8 EQ PUSH2 0xC2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x646 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH2 0x8C PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x10F SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1F8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x184 JUMPI PUSH2 0x184 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1E6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1C0 JUMPI PUSH2 0x1C0 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH2 0x1F0 DUP2 PUSH2 0x835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x140 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 DUP4 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x22B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ DUP1 PUSH2 0x2BB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F7520646F6E2774206861766520616363657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3E0 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x353 SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37F SWAP1 PUSH2 0x85E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x334 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1F8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x81F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4E1 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x81F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH2 0x4EB DUP2 PUSH2 0x835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x437 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP4 DUP8 ADD DUP2 DUP2 MSTORE DUP6 SLOAD DUP1 DUP4 ADD DUP8 SSTORE SWAP6 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP5 MLOAD SWAP5 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP7 AND SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE SWAP5 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x587 SWAP1 PUSH2 0x85E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x5EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x5C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x5EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x5EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5D4 JUMP JUMPDEST POP PUSH2 0x5FB SWAP3 SWAP2 POP PUSH2 0x5FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x600 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x662 DUP4 PUSH2 0x614 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A5 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CD PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x723 DUP3 PUSH2 0x614 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD ISZERO ISZERO DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x747 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x811 JUMPI DUP9 DUP7 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP3 MLOAD DUP1 MLOAD DUP1 DUP9 MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7E1 JUMPI DUP3 DUP2 ADD DUP11 ADD MLOAD DUP10 DUP3 ADD DUP12 ADD MSTORE DUP10 ADD PUSH2 0x7C6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7F1 JUMPI DUP5 DUP11 DUP4 DUP12 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP7 SWAP1 SWAP7 ADD DUP8 ADD SWAP6 POP SWAP4 DUP7 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x7AC JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x857 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x872 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x893 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xE2 MULMOD SWAP9 MSTORE8 SELFDESTRUCT EXTCODECOPY 0xB3 DUP11 SIGNEXTEND DUP15 0x2A 0xCB DUP15 0xC 0xBC CALLVALUE PUSH12 0xAA10442A2A3702AA1EF90E4A 0x2F DUP3 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36D6DA55"
    },
    "38": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9ED9CB8"
    },
    "49": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC8BEF81"
    },
    "60": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "64": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEB39113F"
    },
    "71": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "75": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF9913E8"
    },
    "82": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "86": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        70,
        1491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "92": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "93": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "96": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "99": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "102": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x646"
    },
    "105": {
      "fn": "Upload.add",
      "jump": "i",
      "offset": [
        357,
        447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "106": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "110": {
      "fn": "Upload.add",
      "jump": "i",
      "offset": [
        357,
        447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "STOP",
      "path": "0"
    },
    "113": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "117": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "120": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "121": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "123": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "126": {
      "fn": "Upload.disallow",
      "jump": "i",
      "offset": [
        918,
        1188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "127": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114"
    },
    "131": {
      "fn": "Upload.disallow",
      "jump": "i",
      "offset": [
        918,
        1188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "132": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "136": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "139": {
      "fn": "Upload.shareAccess",
      "jump": "i",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "140": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "143": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "144": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99"
    },
    "147": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "148": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "149": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72A"
    },
    "152": {
      "fn": "Upload.shareAccess",
      "jump": "i",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "153": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "154": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "156": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "157": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "158": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "159": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SUB",
      "path": "0"
    },
    "160": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "161": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "RETURN",
      "path": "0"
    },
    "162": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "166": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0"
    },
    "169": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "170": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "172": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "175": {
      "fn": "Upload.display",
      "jump": "i",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "176": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "177": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "180": {
      "fn": "Upload.display",
      "jump": "i",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "181": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "184": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "185": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99"
    },
    "188": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "189": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "190": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x784"
    },
    "193": {
      "fn": "Upload.display",
      "jump": "i",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "198": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "201": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "202": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "204": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "207": {
      "fn": "Upload.allow",
      "jump": "i",
      "offset": [
        450,
        915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EB"
    },
    "212": {
      "fn": "Upload.allow",
      "jump": "i",
      "offset": [
        450,
        915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "op": "SUB"
    },
    "222": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "223": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "AND",
      "path": "0"
    },
    "224": {
      "fn": "Upload.add",
      "offset": [
        420,
        425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "226": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "227": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "DUP2",
      "path": "0"
    },
    "228": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "229": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "231": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "DUP2",
      "path": "0"
    },
    "232": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "DUP2",
      "path": "0"
    },
    "233": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "234": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "236": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "DUP3",
      "path": "0"
    },
    "237": {
      "fn": "Upload.add",
      "offset": [
        420,
        432
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "238": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "240": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "242": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "243": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "ADD",
      "path": "0"
    },
    "244": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP3",
      "path": "0"
    },
    "245": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "246": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "247": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP4",
      "path": "0"
    },
    "248": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "249": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "250": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "251": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "252": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "253": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP4",
      "path": "0"
    },
    "254": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "258": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "259": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "260": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "261": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "262": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "ADD",
      "path": "0"
    },
    "263": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "264": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "DUP5",
      "path": "0"
    },
    "265": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "ADD",
      "path": "0"
    },
    "266": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57B"
    },
    "270": {
      "fn": "Upload.add",
      "jump": "i",
      "offset": [
        420,
        442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "Upload.add",
      "offset": [
        420,
        442
      ],
      "op": "POP",
      "path": "0"
    },
    "273": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": "Upload.add",
      "offset": [
        357,
        447
      ],
      "op": "POP",
      "path": "0"
    },
    "275": {
      "fn": "Upload.add",
      "jump": "o",
      "offset": [
        357,
        447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "276": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "fn": "Upload.disallow",
      "offset": [
        974,
        984
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "278": {
      "fn": "Upload.disallow",
      "offset": [
        992,
        997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "280": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "281": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "282": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "283": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "285": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "287": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "288": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "289": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "290": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "292": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "293": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "DUP4",
      "path": "0"
    },
    "294": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        985
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "301": {
      "op": "SHL"
    },
    "302": {
      "op": "SUB"
    },
    "303": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "DUP6",
      "path": "0"
    },
    "304": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "AND",
      "path": "0"
    },
    "305": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "DUP5",
      "path": "0"
    },
    "306": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "307": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "308": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "309": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "310": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "311": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        991
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "312": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        997
      ],
      "op": "DUP1",
      "path": "0"
    },
    "313": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        997
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "316": {
      "op": "NOT"
    },
    "317": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        997
      ],
      "op": "AND",
      "path": "0"
    },
    "318": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "319": {
      "fn": "Upload.disallow",
      "offset": [
        964,
        997
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "320": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "Upload.disallow",
      "offset": [
        1031,
        1041
      ],
      "op": "CALLER",
      "path": "0"
    },
    "322": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "324": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "325": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "326": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "327": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "329": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "331": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "332": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "334": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "335": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1042
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "336": {
      "fn": "Upload.disallow",
      "offset": [
        1020,
        1049
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "337": {
      "fn": "Upload.disallow",
      "offset": [
        1018,
        1049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "338": {
      "fn": "Upload.disallow",
      "offset": [
        1018,
        1049
      ],
      "op": "LT",
      "path": "0"
    },
    "339": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "340": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "343": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": "Upload.disallow",
      "offset": [
        1080,
        1090
      ],
      "op": "CALLER",
      "path": "0"
    },
    "345": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "348": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "DUP2",
      "path": "0"
    },
    "349": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "350": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "352": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "354": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "355": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "357": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "358": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "359": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "360": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "SUB"
    },
    "369": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1105
      ],
      "op": "DUP5",
      "path": "0"
    },
    "370": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1105
      ],
      "op": "AND",
      "path": "0"
    },
    "371": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1105
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "372": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1091
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "fn": "Upload.disallow",
      "offset": [
        1092,
        1093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "374": {
      "fn": "Upload.disallow",
      "offset": [
        1092,
        1093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "375": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "DUP2",
      "path": "0"
    },
    "376": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "LT",
      "path": "0"
    },
    "377": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "380": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "381": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "384": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "387": {
      "fn": "Upload.disallow",
      "jump": "i",
      "offset": [
        1069,
        1094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "391": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "392": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "DUP3",
      "path": "0"
    },
    "393": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "394": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "396": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "398": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "399": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1094
      ],
      "op": "ADD",
      "path": "0"
    },
    "400": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1099
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "op": "SUB"
    },
    "409": {
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1099
      ],
      "op": "AND",
      "path": "0"
    },
    "410": {
      "branch": 12,
      "fn": "Upload.disallow",
      "offset": [
        1069,
        1105
      ],
      "op": "EQ",
      "path": "0"
    },
    "411": {
      "fn": "Upload.disallow",
      "offset": [
        1066,
        1176
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "412": {
      "fn": "Upload.disallow",
      "offset": [
        1066,
        1176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "415": {
      "branch": 12,
      "fn": "Upload.disallow",
      "offset": [
        1066,
        1176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "416": {
      "fn": "Upload.disallow",
      "offset": [
        1134,
        1144
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "417": {
      "fn": "Upload.disallow",
      "offset": [
        1156,
        1161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "420": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "DUP2",
      "path": "0"
    },
    "421": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "424": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "426": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "427": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "429": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "DUP2",
      "path": "0"
    },
    "430": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1145
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "431": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "DUP1",
      "path": "0"
    },
    "432": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "433": {
      "fn": "Upload.disallow",
      "offset": [
        1146,
        1147
      ],
      "op": "DUP4",
      "path": "0"
    },
    "434": {
      "fn": "Upload.disallow",
      "offset": [
        1146,
        1147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "435": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "436": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "LT",
      "path": "0"
    },
    "437": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "440": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "441": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "444": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "447": {
      "fn": "Upload.disallow",
      "jump": "i",
      "offset": [
        1123,
        1148
      ],
      "op": "JUMP",
      "path": "0"
    },
    "448": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "451": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "452": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "DUP3",
      "path": "0"
    },
    "453": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "454": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "456": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "457": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "458": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "459": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1148
      ],
      "op": "ADD",
      "path": "0"
    },
    "460": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "462": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "463": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "464": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "MUL",
      "path": "0"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "NOT"
    },
    "477": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "479": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "AND",
      "path": "0"
    },
    "480": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "481": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "483": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "OR",
      "path": "0"
    },
    "484": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "Upload.disallow",
      "offset": [
        1123,
        1161
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "486": {
      "fn": "Upload.disallow",
      "offset": [
        1066,
        1176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 3
    },
    "488": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "491": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "492": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x835"
    },
    "495": {
      "fn": "Upload.disallow",
      "jump": "i",
      "offset": [
        1050,
        1053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "496": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "498": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "POP",
      "path": "0"
    },
    "499": {
      "fn": "Upload.disallow",
      "offset": [
        1050,
        1053
      ],
      "op": "POP",
      "path": "0"
    },
    "500": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "503": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "504": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "505": {
      "fn": "Upload.disallow",
      "offset": [
        1005,
        1184
      ],
      "op": "POP",
      "path": "0"
    },
    "506": {
      "fn": "Upload.disallow",
      "offset": [
        918,
        1188
      ],
      "op": "POP",
      "path": "0"
    },
    "507": {
      "fn": "Upload.disallow",
      "jump": "o",
      "offset": [
        918,
        1188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "508": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "Upload.shareAccess",
      "offset": [
        1473,
        1483
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "510": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "512": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "513": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "515": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "517": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "519": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "521": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "522": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "524": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "525": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "526": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "527": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "529": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "530": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "531": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "532": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP6",
      "path": "0"
    },
    "533": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MUL",
      "path": "0"
    },
    "534": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "536": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP6",
      "path": "0"
    },
    "537": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "538": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "539": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "540": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "542": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "543": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "544": {
      "fn": "Upload.shareAccess",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "546": {
      "fn": "Upload.shareAccess",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "547": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "548": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "549": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "550": {
      "fn": "Upload.shareAccess",
      "offset": [
        1462,
        1484
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "551": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "552": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "553": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP5",
      "path": "0"
    },
    "554": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "555": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "557": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "558": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "LT",
      "path": "0"
    },
    "559": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "560": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "563": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "564": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "566": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP5",
      "path": "0"
    },
    "567": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "568": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "569": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "571": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "573": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "575": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "577": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "578": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "579": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "580": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "581": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "582": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "583": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "585": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "586": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP5",
      "path": "0"
    },
    "587": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "588": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "599": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "600": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "607": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DIV",
      "path": "0"
    },
    "608": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "610": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "611": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "612": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "613": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "614": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "615": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "616": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "617": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "618": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "619": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "621": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "622": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "623": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "624": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "625": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "ADD",
      "path": "0"
    },
    "626": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "629": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "630": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "632": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "633": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "634": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "635": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "Upload.shareAccess",
      "offset": [
        1455,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "637": {
      "fn": "Upload.shareAccess",
      "offset": [
        1388,
        1489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "Upload.shareAccess",
      "jump": "o",
      "offset": [
        1388,
        1489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Upload.display",
      "offset": [
        1246,
        1261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "Upload.display",
      "offset": [
        1278,
        1295
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 5
    },
    "651": {
      "fn": "Upload.display",
      "offset": [
        1278,
        1295
      ],
      "op": "AND",
      "path": "0"
    },
    "652": {
      "fn": "Upload.display",
      "offset": [
        1285,
        1295
      ],
      "op": "CALLER",
      "path": "0"
    },
    "653": {
      "fn": "Upload.display",
      "offset": [
        1278,
        1295
      ],
      "op": "EQ",
      "path": "0"
    },
    "654": {
      "branch": 13,
      "fn": "Upload.display",
      "offset": [
        1278,
        1295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "655": {
      "fn": "Upload.display",
      "offset": [
        1278,
        1327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB"
    },
    "658": {
      "branch": 13,
      "fn": "Upload.display",
      "offset": [
        1278,
        1327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "DUP3",
      "path": "0"
    },
    "669": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "AND",
      "path": "0"
    },
    "670": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "672": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "673": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "674": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "675": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "677": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "680": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "681": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "682": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "684": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "685": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "DUP4",
      "path": "0"
    },
    "686": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1315
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "687": {
      "fn": "Upload.display",
      "offset": [
        1316,
        1326
      ],
      "op": "CALLER",
      "path": "0"
    },
    "688": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "DUP5",
      "path": "0"
    },
    "689": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "690": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "691": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "692": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "693": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "694": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "695": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "696": {
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "698": {
      "branch": 14,
      "fn": "Upload.display",
      "offset": [
        1299,
        1327
      ],
      "op": "AND",
      "path": "0"
    },
    "699": {
      "fn": "Upload.display",
      "offset": [
        1278,
        1327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "700": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303"
    },
    "703": {
      "branch": 14,
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "704": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "706": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "715": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "718": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "720": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "727": {
      "op": "DUP3"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "op": "MSTORE"
    },
    "730": {
      "op": "PUSH21",
      "value": "0x596F7520646F6E2774206861766520616363657373"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "765": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "766": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "SUB",
      "path": "0"
    },
    "769": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "771": {
      "fn": "Upload.display",
      "offset": [
        1270,
        1352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 6
    },
    "781": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "AND",
      "path": "0"
    },
    "782": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "784": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "785": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "786": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "787": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "789": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "790": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "794": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "795": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "796": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "797": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "798": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "799": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "800": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "801": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "802": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP6",
      "path": "0"
    },
    "803": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MUL",
      "path": "0"
    },
    "804": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "805": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "806": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP6",
      "path": "0"
    },
    "807": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "808": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "810": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "812": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "813": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "815": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "816": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "817": {
      "fn": "Upload.display",
      "offset": [
        1367,
        1379
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "818": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "820": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "821": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "822": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "823": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "LT",
      "path": "0"
    },
    "824": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "825": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "828": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "829": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "830": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "831": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "834": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "835": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "837": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "839": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "840": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "841": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "842": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "843": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "846": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "847": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85E"
    },
    "850": {
      "fn": "Upload.display",
      "jump": "i",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "851": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "853": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "855": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "856": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "858": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "860": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DIV",
      "path": "0"
    },
    "861": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MUL",
      "path": "0"
    },
    "862": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "864": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "865": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "867": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "868": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "870": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "871": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "873": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "874": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "875": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "876": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "878": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "879": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "880": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "881": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "883": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "884": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "885": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "886": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "887": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "890": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "891": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85E"
    },
    "894": {
      "fn": "Upload.display",
      "jump": "i",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "895": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "897": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "898": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "901": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "902": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "903": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "905": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "LT",
      "path": "0"
    },
    "906": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A1"
    },
    "909": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "910": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "913": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "914": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "915": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "916": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DIV",
      "path": "0"
    },
    "917": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MUL",
      "path": "0"
    },
    "918": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "919": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "920": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "921": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "923": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "924": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "925": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "928": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "929": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "930": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "931": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "932": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "933": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "936": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "939": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "941": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "942": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "943": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "945": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "946": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "947": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "948": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "951": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "952": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "953": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "955": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "956": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "957": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "958": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "GT",
      "path": "0"
    },
    "959": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "962": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "964": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "965": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SUB",
      "path": "0"
    },
    "966": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "968": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "AND",
      "path": "0"
    },
    "969": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "970": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "971": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "972": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "974": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "975": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "976": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "977": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "978": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "980": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "982": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "983": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "984": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "986": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "ADD",
      "path": "0"
    },
    "987": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "988": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x334"
    },
    "991": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "994": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "995": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "996": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "997": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "998": {
      "fn": "Upload.display",
      "offset": [
        1360,
        1379
      ],
      "op": "POP",
      "path": "0"
    },
    "999": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1000": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1001": {
      "fn": "Upload.display",
      "offset": [
        1192,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "1002": {
      "fn": "Upload.display",
      "jump": "o",
      "offset": [
        1192,
        1384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1003": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "Upload.allow",
      "offset": [
        511,
        521
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "1005": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1007": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1009": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1010": {
      "fn": "Upload.allow",
      "offset": [
        529,
        533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1012": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1014": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1015": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1016": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1017": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1019": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1020": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1021": {
      "fn": "Upload.allow",
      "offset": [
        501,
        522
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1031": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "AND",
      "path": "0"
    },
    "1032": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1033": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1034": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1035": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1036": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1037": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1038": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1039": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1040": {
      "fn": "Upload.allow",
      "offset": [
        501,
        528
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1041": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1042": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1045": {
      "op": "NOT"
    },
    "1046": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "AND",
      "path": "0"
    },
    "1047": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1049": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "OR",
      "path": "0"
    },
    "1050": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1051": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1052": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1053": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1054": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1055": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1056": {
      "fn": "Upload.allow",
      "offset": [
        545,
        557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1058": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1059": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1060": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1061": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1062": {
      "fn": "Upload.allow",
      "offset": [
        545,
        569
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1063": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1064": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1065": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1066": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1067": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1068": {
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1069": {
      "fn": "Upload.allow",
      "offset": [
        501,
        533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1071": {
      "branch": 15,
      "fn": "Upload.allow",
      "offset": [
        545,
        575
      ],
      "op": "AND",
      "path": "0"
    },
    "1072": {
      "fn": "Upload.allow",
      "offset": [
        542,
        906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1073": {
      "fn": "Upload.allow",
      "offset": [
        542,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "1076": {
      "branch": 15,
      "fn": "Upload.allow",
      "offset": [
        542,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1077": {
      "fn": "Upload.allow",
      "offset": [
        591,
        597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1079": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1080": {
      "fn": "Upload.allow",
      "offset": [
        613,
        623
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1081": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1083": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1084": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1085": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1086": {
      "fn": "Upload.allow",
      "offset": [
        602,
        612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1088": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1090": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1091": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1093": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1094": {
      "fn": "Upload.allow",
      "offset": [
        602,
        624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1095": {
      "fn": "Upload.allow",
      "offset": [
        602,
        631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1096": {
      "fn": "Upload.allow",
      "offset": [
        600,
        631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1097": {
      "fn": "Upload.allow",
      "offset": [
        600,
        631
      ],
      "op": "LT",
      "path": "0"
    },
    "1098": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1099": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "1102": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1103": {
      "fn": "Upload.allow",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1104": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1106": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1109": {
      "fn": "Upload.allow",
      "offset": [
        654,
        664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1111": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1113": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1116": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1117": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1118": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1119": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "op": "SUB"
    },
    "1128": {
      "fn": "Upload.allow",
      "offset": [
        654,
        690
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1129": {
      "fn": "Upload.allow",
      "offset": [
        654,
        690
      ],
      "op": "AND",
      "path": "0"
    },
    "1130": {
      "fn": "Upload.allow",
      "offset": [
        654,
        690
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1131": {
      "fn": "Upload.allow",
      "offset": [
        654,
        676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1132": {
      "fn": "Upload.allow",
      "offset": [
        677,
        678
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1133": {
      "fn": "Upload.allow",
      "offset": [
        677,
        678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1134": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1135": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "LT",
      "path": "0"
    },
    "1136": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1139": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1140": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1143": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "1146": {
      "fn": "Upload.allow",
      "jump": "i",
      "offset": [
        654,
        679
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1147": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1148": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1150": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1151": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1152": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1155": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1156": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1157": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1158": {
      "fn": "Upload.allow",
      "offset": [
        654,
        679
      ],
      "op": "ADD",
      "path": "0"
    },
    "1159": {
      "fn": "Upload.allow",
      "offset": [
        654,
        684
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "fn": "Upload.allow",
      "offset": [
        654,
        684
      ],
      "op": "AND",
      "path": "0"
    },
    "1169": {
      "branch": 16,
      "fn": "Upload.allow",
      "offset": [
        654,
        690
      ],
      "op": "EQ",
      "path": "0"
    },
    "1170": {
      "fn": "Upload.allow",
      "offset": [
        651,
        765
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1171": {
      "fn": "Upload.allow",
      "offset": [
        651,
        765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E1"
    },
    "1174": {
      "branch": 16,
      "fn": "Upload.allow",
      "offset": [
        651,
        765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1175": {
      "fn": "Upload.allow",
      "offset": [
        722,
        732
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "1176": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1178": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1179": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1180": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1181": {
      "fn": "Upload.allow",
      "offset": [
        711,
        721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1183": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1185": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1186": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1188": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1189": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1190": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1191": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1192": {
      "fn": "Upload.allow",
      "offset": [
        744,
        748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1194": {
      "fn": "Upload.allow",
      "offset": [
        744,
        748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1195": {
      "fn": "Upload.allow",
      "offset": [
        711,
        733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "Upload.allow",
      "offset": [
        734,
        735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1197": {
      "fn": "Upload.allow",
      "offset": [
        734,
        735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1198": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1199": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "LT",
      "path": "0"
    },
    "1200": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BB"
    },
    "1203": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1204": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BB"
    },
    "1207": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "1210": {
      "fn": "Upload.allow",
      "jump": "i",
      "offset": [
        711,
        736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1211": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1212": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1214": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1215": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1216": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1217": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1219": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1220": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1221": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1222": {
      "fn": "Upload.allow",
      "offset": [
        711,
        736
      ],
      "op": "ADD",
      "path": "0"
    },
    "1223": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1224": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1225": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1226": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1227": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "MUL",
      "path": "0"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "NOT"
    },
    "1240": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1241": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1242": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "AND",
      "path": "0"
    },
    "1243": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1244": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1245": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1246": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "OR",
      "path": "0"
    },
    "1247": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "Upload.allow",
      "offset": [
        711,
        748
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1249": {
      "fn": "Upload.allow",
      "offset": [
        651,
        765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1250": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "1251": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EB"
    },
    "1254": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1255": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x835"
    },
    "1258": {
      "fn": "Upload.allow",
      "jump": "i",
      "offset": [
        632,
        635
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1259": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1260": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1261": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "POP",
      "path": "0"
    },
    "1262": {
      "fn": "Upload.allow",
      "offset": [
        632,
        635
      ],
      "op": "POP",
      "path": "0"
    },
    "1263": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x437"
    },
    "1266": {
      "fn": "Upload.allow",
      "offset": [
        587,
        776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1267": {
      "fn": "Upload.allow",
      "offset": [
        542,
        906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1268": {
      "fn": "Upload.allow",
      "offset": [
        811,
        821
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "1269": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1271": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1272": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1273": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1274": {
      "fn": "Upload.allow",
      "offset": [
        800,
        810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1276": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1278": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1279": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1280": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1281": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1283": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1284": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1285": {
      "fn": "Upload.allow",
      "offset": [
        800,
        822
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1286": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1287": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1288": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1289": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1290": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "ADD",
      "path": "0"
    },
    "1291": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1292": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1302": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1303": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "AND",
      "path": "0"
    },
    "1304": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1305": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1306": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1307": {
      "fn": "Upload.allow",
      "offset": [
        840,
        844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1309": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1310": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1311": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "ADD",
      "path": "0"
    },
    "1312": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1313": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1314": {
      "fn": "Upload.allow",
      "offset": [
        828,
        845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1315": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1316": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1317": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1318": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1319": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "ADD",
      "path": "0"
    },
    "1320": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1321": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1322": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1323": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1324": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1326": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1327": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1328": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1329": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1330": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1331": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1332": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1333": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "ADD",
      "path": "0"
    },
    "1334": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1335": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1336": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1337": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1338": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1339": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "MUL",
      "path": "0"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "op": "NOT"
    },
    "1355": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1356": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1357": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "AND",
      "path": "0"
    },
    "1358": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1359": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1360": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1361": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "AND",
      "path": "0"
    },
    "1362": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1363": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1364": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1365": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "OR",
      "path": "0"
    },
    "1366": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1367": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1368": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1369": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "OR",
      "path": "0"
    },
    "1370": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1371": {
      "fn": "Upload.allow",
      "offset": [
        800,
        846
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1372": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 11
    },
    "1373": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1374": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1375": {
      "fn": "Upload.allow",
      "offset": [
        860,
        872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1377": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1378": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1379": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1380": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1381": {
      "fn": "Upload.allow",
      "offset": [
        860,
        884
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1382": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1384": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1385": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1386": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1387": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1388": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1389": {
      "fn": "Upload.allow",
      "offset": [
        860,
        890
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1390": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1391": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1394": {
      "op": "NOT"
    },
    "1395": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "AND",
      "path": "0"
    },
    "1396": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1397": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1398": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "OR",
      "path": "0"
    },
    "1399": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1400": {
      "fn": "Upload.allow",
      "offset": [
        860,
        895
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1401": {
      "fn": "Upload.allow",
      "offset": [
        450,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "1402": {
      "fn": "Upload.allow",
      "jump": "o",
      "offset": [
        450,
        915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1403": {
      "op": "JUMPDEST"
    },
    "1404": {
      "op": "DUP3"
    },
    "1405": {
      "op": "DUP1"
    },
    "1406": {
      "op": "SLOAD"
    },
    "1407": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "1414": {
      "jump": "i",
      "op": "JUMP"
    },
    "1415": {
      "op": "JUMPDEST"
    },
    "1416": {
      "op": "SWAP1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1424": {
      "op": "KECCAK256"
    },
    "1425": {
      "op": "SWAP1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1428": {
      "op": "ADD"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1431": {
      "op": "SWAP1"
    },
    "1432": {
      "op": "DIV"
    },
    "1433": {
      "op": "DUP2"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "SWAP3"
    },
    "1436": {
      "op": "DUP3"
    },
    "1437": {
      "op": "PUSH2",
      "value": "0x5A9"
    },
    "1440": {
      "op": "JUMPI"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1443": {
      "op": "DUP6"
    },
    "1444": {
      "op": "SSTORE"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1448": {
      "op": "JUMP"
    },
    "1449": {
      "op": "JUMPDEST"
    },
    "1450": {
      "op": "DUP3"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1453": {
      "op": "LT"
    },
    "1454": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1457": {
      "op": "JUMPI"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "op": "MLOAD"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1462": {
      "op": "NOT"
    },
    "1463": {
      "op": "AND"
    },
    "1464": {
      "op": "DUP4"
    },
    "1465": {
      "op": "DUP1"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "OR"
    },
    "1468": {
      "op": "DUP6"
    },
    "1469": {
      "op": "SSTORE"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1473": {
      "op": "JUMP"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "DUP3"
    },
    "1476": {
      "op": "DUP1"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "DUP6"
    },
    "1482": {
      "op": "SSTORE"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "ISZERO"
    },
    "1485": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1488": {
      "op": "JUMPI"
    },
    "1489": {
      "op": "SWAP2"
    },
    "1490": {
      "op": "DUP3"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "DUP3"
    },
    "1494": {
      "op": "DUP2"
    },
    "1495": {
      "op": "GT"
    },
    "1496": {
      "op": "ISZERO"
    },
    "1497": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1500": {
      "op": "JUMPI"
    },
    "1501": {
      "op": "DUP3"
    },
    "1502": {
      "op": "MLOAD"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "SSTORE"
    },
    "1505": {
      "op": "SWAP2"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "SWAP2"
    },
    "1510": {
      "op": "SWAP1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "SWAP1"
    },
    "1515": {
      "op": "PUSH2",
      "value": "0x5D4"
    },
    "1518": {
      "op": "JUMP"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "op": "PUSH2",
      "value": "0x5FB"
    },
    "1524": {
      "op": "SWAP3"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1530": {
      "jump": "i",
      "op": "JUMP"
    },
    "1531": {
      "op": "JUMPDEST"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "op": "SWAP1"
    },
    "1534": {
      "jump": "o",
      "op": "JUMP"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "JUMPDEST"
    },
    "1537": {
      "op": "DUP1"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "GT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x5FB"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "DUP2"
    },
    "1548": {
      "op": "SSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "1555": {
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "DUP1"
    },
    "1558": {
      "op": "CALLDATALOAD"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "op": "DUP2"
    },
    "1568": {
      "op": "AND"
    },
    "1569": {
      "op": "DUP2"
    },
    "1570": {
      "op": "EQ"
    },
    "1571": {
      "op": "PUSH2",
      "value": "0x62B"
    },
    "1574": {
      "op": "JUMPI"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1577": {
      "op": "DUP1"
    },
    "1578": {
      "op": "REVERT"
    },
    "1579": {
      "op": "JUMPDEST"
    },
    "1580": {
      "op": "SWAP2"
    },
    "1581": {
      "op": "SWAP1"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "jump": "o",
      "op": "JUMP"
    },
    "1584": {
      "op": "JUMPDEST"
    },
    "1585": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1605": {
      "op": "REVERT"
    },
    "1606": {
      "op": "JUMPDEST"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1612": {
      "op": "DUP4"
    },
    "1613": {
      "op": "DUP6"
    },
    "1614": {
      "op": "SUB"
    },
    "1615": {
      "op": "SLT"
    },
    "1616": {
      "op": "ISZERO"
    },
    "1617": {
      "op": "PUSH2",
      "value": "0x659"
    },
    "1620": {
      "op": "JUMPI"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1623": {
      "op": "DUP1"
    },
    "1624": {
      "op": "REVERT"
    },
    "1625": {
      "op": "JUMPDEST"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1629": {
      "op": "DUP4"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1633": {
      "jump": "i",
      "op": "JUMP"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "SWAP2"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1639": {
      "op": "DUP4"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "CALLDATALOAD"
    },
    "1642": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1651": {
      "op": "DUP1"
    },
    "1652": {
      "op": "DUP3"
    },
    "1653": {
      "op": "GT"
    },
    "1654": {
      "op": "ISZERO"
    },
    "1655": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1658": {
      "op": "JUMPI"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1661": {
      "op": "DUP1"
    },
    "1662": {
      "op": "REVERT"
    },
    "1663": {
      "op": "JUMPDEST"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "DUP6"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "SWAP2"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "DUP6"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1672": {
      "op": "DUP4"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "op": "SLT"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x693"
    },
    "1678": {
      "op": "JUMPI"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1681": {
      "op": "DUP1"
    },
    "1682": {
      "op": "REVERT"
    },
    "1683": {
      "op": "JUMPDEST"
    },
    "1684": {
      "op": "DUP2"
    },
    "1685": {
      "op": "CALLDATALOAD"
    },
    "1686": {
      "op": "DUP2"
    },
    "1687": {
      "op": "DUP2"
    },
    "1688": {
      "op": "GT"
    },
    "1689": {
      "op": "ISZERO"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1693": {
      "op": "JUMPI"
    },
    "1694": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1697": {
      "op": "PUSH2",
      "value": "0x630"
    },
    "1700": {
      "jump": "i",
      "op": "JUMP"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1704": {
      "op": "MLOAD"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1711": {
      "op": "NOT"
    },
    "1712": {
      "op": "SWAP1"
    },
    "1713": {
      "op": "DUP2"
    },
    "1714": {
      "op": "AND"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "AND"
    },
    "1719": {
      "op": "DUP2"
    },
    "1720": {
      "op": "ADD"
    },
    "1721": {
      "op": "SWAP1"
    },
    "1722": {
      "op": "DUP4"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "GT"
    },
    "1725": {
      "op": "DUP2"
    },
    "1726": {
      "op": "DUP4"
    },
    "1727": {
      "op": "LT"
    },
    "1728": {
      "op": "OR"
    },
    "1729": {
      "op": "ISZERO"
    },
    "1730": {
      "op": "PUSH2",
      "value": "0x6CD"
    },
    "1733": {
      "op": "JUMPI"
    },
    "1734": {
      "op": "PUSH2",
      "value": "0x6CD"
    },
    "1737": {
      "op": "PUSH2",
      "value": "0x630"
    },
    "1740": {
      "jump": "i",
      "op": "JUMP"
    },
    "1741": {
      "op": "JUMPDEST"
    },
    "1742": {
      "op": "DUP2"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "DUP3"
    },
    "1747": {
      "op": "DUP2"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "op": "DUP9"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1752": {
      "op": "DUP5"
    },
    "1753": {
      "op": "DUP8"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "op": "GT"
    },
    "1757": {
      "op": "ISZERO"
    },
    "1758": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1761": {
      "op": "JUMPI"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1764": {
      "op": "DUP1"
    },
    "1765": {
      "op": "REVERT"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1770": {
      "op": "DUP7"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1774": {
      "op": "DUP4"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "CALLDATACOPY"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1781": {
      "op": "DUP5"
    },
    "1782": {
      "op": "DUP4"
    },
    "1783": {
      "op": "ADD"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "op": "MSTORE"
    },
    "1786": {
      "op": "DUP1"
    },
    "1787": {
      "op": "SWAP6"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "SWAP3"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "SWAP3"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "jump": "o",
      "op": "JUMP"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1805": {
      "op": "DUP3"
    },
    "1806": {
      "op": "DUP5"
    },
    "1807": {
      "op": "SUB"
    },
    "1808": {
      "op": "SLT"
    },
    "1809": {
      "op": "ISZERO"
    },
    "1810": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "1813": {
      "op": "JUMPI"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "REVERT"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "1822": {
      "op": "DUP3"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1826": {
      "jump": "i",
      "op": "JUMP"
    },
    "1827": {
      "op": "JUMPDEST"
    },
    "1828": {
      "op": "SWAP4"
    },
    "1829": {
      "op": "SWAP3"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "op": "POP"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "jump": "o",
      "op": "JUMP"
    },
    "1834": {
      "op": "JUMPDEST"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1837": {
      "op": "DUP1"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "MSTORE"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "MLOAD"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "DUP2"
    },
    "1846": {
      "op": "SWAP1"
    },
    "1847": {
      "op": "MSTORE"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1850": {
      "op": "SWAP2"
    },
    "1851": {
      "op": "SWAP1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1854": {
      "op": "SWAP1"
    },
    "1855": {
      "op": "DUP2"
    },
    "1856": {
      "op": "DUP6"
    },
    "1857": {
      "op": "ADD"
    },
    "1858": {
      "op": "SWAP1"
    },
    "1859": {
      "op": "DUP7"
    },
    "1860": {
      "op": "DUP5"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "DUP6"
    },
    "1863": {
      "op": "JUMPDEST"
    },
    "1864": {
      "op": "DUP3"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "LT"
    },
    "1867": {
      "op": "ISZERO"
    },
    "1868": {
      "op": "PUSH2",
      "value": "0x777"
    },
    "1871": {
      "op": "JUMPI"
    },
    "1872": {
      "op": "DUP2"
    },
    "1873": {
      "op": "MLOAD"
    },
    "1874": {
      "op": "DUP1"
    },
    "1875": {
      "op": "MLOAD"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "AND"
    },
    "1885": {
      "op": "DUP6"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "DUP7"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "op": "MLOAD"
    },
    "1890": {
      "op": "ISZERO"
    },
    "1891": {
      "op": "ISZERO"
    },
    "1892": {
      "op": "DUP7"
    },
    "1893": {
      "op": "DUP6"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "MSTORE"
    },
    "1896": {
      "op": "SWAP3"
    },
    "1897": {
      "op": "DUP5"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "SWAP3"
    },
    "1900": {
      "op": "SWAP1"
    },
    "1901": {
      "op": "DUP6"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "SWAP1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "PUSH2",
      "value": "0x747"
    },
    "1910": {
      "op": "JUMP"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "op": "SWAP2"
    },
    "1914": {
      "op": "SWAP8"
    },
    "1915": {
      "op": "SWAP7"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "jump": "o",
      "op": "JUMP"
    },
    "1924": {
      "op": "JUMPDEST"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1929": {
      "op": "DUP1"
    },
    "1930": {
      "op": "DUP4"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "op": "DUP2"
    },
    "1933": {
      "op": "DUP5"
    },
    "1934": {
      "op": "MSTORE"
    },
    "1935": {
      "op": "DUP1"
    },
    "1936": {
      "op": "DUP6"
    },
    "1937": {
      "op": "MLOAD"
    },
    "1938": {
      "op": "DUP1"
    },
    "1939": {
      "op": "DUP4"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1943": {
      "op": "DUP7"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "op": "SWAP2"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1949": {
      "op": "DUP2"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "DUP8"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "SWAP3"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "DUP4"
    },
    "1959": {
      "op": "DUP8"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1963": {
      "op": "DUP1"
    },
    "1964": {
      "op": "JUMPDEST"
    },
    "1965": {
      "op": "DUP4"
    },
    "1966": {
      "op": "DUP2"
    },
    "1967": {
      "op": "LT"
    },
    "1968": {
      "op": "ISZERO"
    },
    "1969": {
      "op": "PUSH2",
      "value": "0x811"
    },
    "1972": {
      "op": "JUMPI"
    },
    "1973": {
      "op": "DUP9"
    },
    "1974": {
      "op": "DUP7"
    },
    "1975": {
      "op": "SUB"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1978": {
      "op": "NOT"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "DUP6"
    },
    "1981": {
      "op": "MSTORE"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "MLOAD"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "MLOAD"
    },
    "1986": {
      "op": "DUP1"
    },
    "1987": {
      "op": "DUP9"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "DUP4"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "DUP2"
    },
    "1992": {
      "op": "DUP2"
    },
    "1993": {
      "op": "LT"
    },
    "1994": {
      "op": "ISZERO"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7E1"
    },
    "1998": {
      "op": "JUMPI"
    },
    "1999": {
      "op": "DUP3"
    },
    "2000": {
      "op": "DUP2"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "DUP11"
    },
    "2003": {
      "op": "ADD"
    },
    "2004": {
      "op": "MLOAD"
    },
    "2005": {
      "op": "DUP10"
    },
    "2006": {
      "op": "DUP3"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "DUP12"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "DUP10"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "PUSH2",
      "value": "0x7C6"
    },
    "2016": {
      "op": "JUMP"
    },
    "2017": {
      "op": "JUMPDEST"
    },
    "2018": {
      "op": "DUP2"
    },
    "2019": {
      "op": "DUP2"
    },
    "2020": {
      "op": "GT"
    },
    "2021": {
      "op": "ISZERO"
    },
    "2022": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "2025": {
      "op": "JUMPI"
    },
    "2026": {
      "op": "DUP5"
    },
    "2027": {
      "op": "DUP11"
    },
    "2028": {
      "op": "DUP4"
    },
    "2029": {
      "op": "DUP12"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "ADD"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2040": {
      "op": "NOT"
    },
    "2041": {
      "op": "AND"
    },
    "2042": {
      "op": "SWAP7"
    },
    "2043": {
      "op": "SWAP1"
    },
    "2044": {
      "op": "SWAP7"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "DUP8"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "op": "SWAP6"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "op": "SWAP4"
    },
    "2051": {
      "op": "DUP7"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "SWAP4"
    },
    "2054": {
      "op": "SWAP2"
    },
    "2055": {
      "op": "DUP7"
    },
    "2056": {
      "op": "ADD"
    },
    "2057": {
      "op": "SWAP2"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "2064": {
      "op": "JUMP"
    },
    "2065": {
      "op": "JUMPDEST"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "SWAP4"
    },
    "2068": {
      "op": "SWAP9"
    },
    "2069": {
      "op": "SWAP8"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "op": "POP"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "jump": "o",
      "op": "JUMP"
    },
    "2079": {
      "op": "JUMPDEST"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2100": {
      "op": "REVERT"
    },
    "2101": {
      "op": "JUMPDEST"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2106": {
      "op": "NOT"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "EQ"
    },
    "2109": {
      "op": "ISZERO"
    },
    "2110": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "2113": {
      "op": "JUMPI"
    },
    "2114": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "MSTORE"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2129": {
      "op": "MSTORE"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2134": {
      "op": "REVERT"
    },
    "2135": {
      "op": "JUMPDEST"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "SWAP1"
    },
    "2141": {
      "jump": "o",
      "op": "JUMP"
    },
    "2142": {
      "op": "JUMPDEST"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "DUP2"
    },
    "2146": {
      "op": "DUP2"
    },
    "2147": {
      "op": "SHR"
    },
    "2148": {
      "op": "SWAP1"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "AND"
    },
    "2151": {
      "op": "DUP1"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x872"
    },
    "2155": {
      "op": "JUMPI"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "AND"
    },
    "2160": {
      "op": "SWAP2"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "JUMPDEST"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2165": {
      "op": "DUP3"
    },
    "2166": {
      "op": "LT"
    },
    "2167": {
      "op": "DUP2"
    },
    "2168": {
      "op": "EQ"
    },
    "2169": {
      "op": "ISZERO"
    },
    "2170": {
      "op": "PUSH2",
      "value": "0x893"
    },
    "2173": {
      "op": "JUMPI"
    },
    "2174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "REVERT"
    },
    "2195": {
      "op": "JUMPDEST"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "op": "SWAP2"
    },
    "2198": {
      "op": "SWAP1"
    },
    "2199": {
      "op": "POP"
    },
    "2200": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cd9cee55c70ba6934cf6b318b33ae60aa7f022fb",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.0 <0.9.0;\n\ncontract Upload {\n  \n  struct Access{\n     address user; \n     bool access; //true or false\n  }\n  mapping(address=>string[]) value;\n  mapping(address=>mapping(address=>bool)) ownership;\n  mapping(address=>Access[]) accessList;\n  mapping(address=>mapping(address=>bool)) previousData;\n\n  function add(address _user,string memory url) external {\n      value[_user].push(url);\n  }\n  function allow(address user) external {//def\n      ownership[msg.sender][user]=true; \n      if(previousData[msg.sender][user]){\n         for(uint i=0;i<accessList[msg.sender].length;i++){\n             if(accessList[msg.sender][i].user==user){\n                  accessList[msg.sender][i].access=true; \n             }\n         }\n      }else{\n          accessList[msg.sender].push(Access(user,true));  \n          previousData[msg.sender][user]=true;  \n      }\n    \n  }\n  function disallow(address user) public{\n      ownership[msg.sender][user]=false;\n      for(uint i=0;i<accessList[msg.sender].length;i++){\n          if(accessList[msg.sender][i].user==user){ \n              accessList[msg.sender][i].access=false;  \n          }\n      }\n  }\n\n  function display(address _user) external view returns(string[] memory){\n      require(_user==msg.sender || ownership[_user][msg.sender],\"You don't have access\");\n      return value[_user];\n  }\n\n  function shareAccess() public view returns(Access[] memory){\n      return accessList[msg.sender];\n  }\n}",
  "sourceMap": "70:1421:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Upload.sol",
  "type": "contract"
}